version: '3'

networks:
  laravel:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:8.0.13
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "4306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    container_name: phpmyadmin
    depends_on:
      - mysql
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: secret
      UPLOAD_LIMIT: 64M
    networks:
      - laravel

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    networks:
      - laravel

  npm:
    image: node:latest
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: [ '/var/www/html/artisan' ]
    networks:
      - laravel


  cron:
    build:
      context: .
      dockerfile: cron.dockerfile
    container_name: cron
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
      - ./redis/redis.conf:/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - laravel

  # Laravel Echo Server
  laravel-echo-server:
    build:
      context: ./laravel-echo-server
    container_name: laravel_echo_server
    restart: unless-stopped
    volumes:
      - ./laravel-echo-server/laravel-echo-server.json:/app/laravel-echo-server.json:ro
    ports:
      - "2096:2096"
    links:
      - redis
    networks:
      - laravel
  # REDIS MANAGEMENT SOFTWARE
  redis-webui:
    build:
      context: ./redis-webui
    container_name: redis-webui
    environment:
      - ADMIN_USER=root
      - ADMIN_PASS=root
      - REDIS_1_HOST=redis
      - REDIS_1_PORT=6379
    networks:
      - laravel
    ports:
      - "9987:80"
    depends_on:
      - redis